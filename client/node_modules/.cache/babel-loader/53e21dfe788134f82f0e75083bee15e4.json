{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst storedUserProfile = sessionStorage.getItem('userProfile');\nconst userProfile = storedUserProfile ? JSON.parse(storedUserProfile) : null;\nconst initialUserState = userProfile ? userProfile : {\n  username: null,\n  email: null,\n  avatar: null\n};\nexport const authSlice = createSlice({\n  name: \"gooleUserAuth\",\n  initialState: {\n    email: initialUserState.Gmail,\n    username: initialUserState.Gname,\n    avatar: initialUserState.Gpic\n  },\n  reducers: {\n    setEmail(state, action) {\n      state.email = action.payload;\n    },\n    setUsername(state, action) {\n      state.username = action.payload;\n    },\n    setPropic(state, action) {\n      state.avatar = action.payload;\n    }\n  }\n});\n\n// export all the actions so can call throughout the the application\nexport const {\n  setEmail,\n  setUsername,\n  setPropic\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","storedUserProfile","sessionStorage","getItem","userProfile","JSON","parse","initialUserState","username","email","avatar","authSlice","name","initialState","Gmail","Gname","Gpic","reducers","setEmail","state","action","payload","setUsername","setPropic","actions","reducer"],"sources":["D:/Implementation/InsightMRI/client/src/Redux/SetAuthData.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst storedUserProfile = sessionStorage.getItem('userProfile');\nconst userProfile = storedUserProfile ? JSON.parse(storedUserProfile) : null;\nconst initialUserState = userProfile ? userProfile : { username: null, email: null, avatar:null };\n\nexport const authSlice = createSlice ({\n\n    name:\"gooleUserAuth\",\n\n    initialState: {\n      email: initialUserState.Gmail,\n      username: initialUserState.Gname,\n      avatar: initialUserState.Gpic\n    },\n\n    reducers: {\n      \n      setEmail(state, action) {\n        state.email = action.payload;\n      },\n\n      setUsername(state, action) {\n        state.username = action.payload;\n      },\n\n      setPropic(state, action) {\n        state.avatar = action.payload;\n      },\n\n    },\n  });\n  \n// export all the actions so can call throughout the the application\nexport const { setEmail, setUsername, setPropic } = authSlice.actions;\nexport default authSlice.reducer;\n\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,iBAAiB,GAAGC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC;AAC/D,MAAMC,WAAW,GAAGH,iBAAiB,GAAGI,IAAI,CAACC,KAAK,CAACL,iBAAiB,CAAC,GAAG,IAAI;AAC5E,MAAMM,gBAAgB,GAAGH,WAAW,GAAGA,WAAW,GAAG;EAAEI,QAAQ,EAAE,IAAI;EAAEC,KAAK,EAAE,IAAI;EAAEC,MAAM,EAAC;AAAK,CAAC;AAEjG,OAAO,MAAMC,SAAS,GAAGX,WAAW,CAAE;EAElCY,IAAI,EAAC,eAAe;EAEpBC,YAAY,EAAE;IACZJ,KAAK,EAAEF,gBAAgB,CAACO,KAAK;IAC7BN,QAAQ,EAAED,gBAAgB,CAACQ,KAAK;IAChCL,MAAM,EAAEH,gBAAgB,CAACS;EAC3B,CAAC;EAEDC,QAAQ,EAAE;IAERC,QAAQA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACtBD,KAAK,CAACV,KAAK,GAAGW,MAAM,CAACC,OAAO;IAC9B,CAAC;IAEDC,WAAWA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACX,QAAQ,GAAGY,MAAM,CAACC,OAAO;IACjC,CAAC;IAEDE,SAASA,CAACJ,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACT,MAAM,GAAGU,MAAM,CAACC,OAAO;IAC/B;EAEF;AACF,CAAC,CAAC;;AAEJ;AACA,OAAO,MAAM;EAAEH,QAAQ;EAAEI,WAAW;EAAEC;AAAU,CAAC,GAAGZ,SAAS,CAACa,OAAO;AACrE,eAAeb,SAAS,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}